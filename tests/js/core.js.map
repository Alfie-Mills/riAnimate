{"version":3,"sources":["core.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"core.js","sourcesContent":["function riAnimate(brand=\"rianimate\", options){\n\n    // applies the pre animation class\n    document.querySelectorAll(`[${brand}]`).forEach(elem => { \n        elem.classList.add( `${brand}__preanimate-` + elem.getAttribute(brand) );\n    });\n\n    let riAnimateObserver = new IntersectionObserver(entries => {\n    // Create the observer\n        // Loop over the entries\n        entries.forEach(entry => {\n            // If the element is visible\n            if (entry.isIntersecting) {\n                // Add the animation class\n                entry.target.classList.add( entry.target.getAttribute(brand) );\n\n                // Remove observer once animation class has been applied\n                riAnimateObserver.unobserve(entry.target);\n            }\n        });\n    }, options);\n    \n    // Tell the observer which elements to track\n    document.querySelectorAll(`[${brand}]`).forEach(elem => { riAnimateObserver.observe(elem) });\n}\n\nexport default riAnimate;"]}